@model SalesOrderApp.ViewModels.OrdersViewModel

@if (Model.SelectedSalesOrder != null)
{
    <h2 class="mt-4">Order Lines</h2>
    <button class="btn btn-success mb-3" id="addLineBtn" onclick="addOrderLine(@Model.SelectedSalesOrder.Id)">Add Line</button>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Line Number</th>
                <th>
                    Product Code
                    <input type="text" id="productCodeFilter" class="form-control form-control-sm" placeholder="Filter">
                </th>
                <th>Product Type</th>
                <th>Cost Price</th>
                <th>Sales Price</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="orderLinesTableBody">
            @if (Model.SelectedSalesOrder.OrderLines.Any())
            {
                @foreach (var line in Model.SelectedSalesOrder.OrderLines)
                {
                    <tr>
                        <td>@line.LineNumber</td>
                        <td>@line.ProductCode</td>
                        <td>@line.ProductType.Name</td>
                        <td>@line.CostPrice</td>
                        <td>@line.SalesPrice</td>
                        <td>@line.Quantity</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="editOrderLine(@line.Id, event)">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteLine(@line.Id, event)">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">No available data</td>
                </tr>
            }
        </tbody>
    </table>
}

<script>
    // Event listeners for filter inputs
    document.getElementById('productCodeFilter').addEventListener('input', applyFilters);

    function applyFilters() {
        var productCode = document.getElementById('productCodeFilter').value.toLowerCase();

        var rows = document.querySelectorAll('#orderLinesTableBody tr');

        rows.forEach(function (row) {
            var productCodeCell = row.cells[1].innerText.toLowerCase();

            var matchesProductCode = productCode === '' || productCodeCell.includes(productCode);

            if (matchesProductCode) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function deleteLine(lineId, event) {
        // Prevent triggering the row click event
        event.stopPropagation();

        if (confirm('Are you sure you want to delete this line?')) {
            $.ajax({
                url: '@Url.Action("DeleteLine", "Orders")',
                type: 'POST',
                data: { id: lineId },
                success: function (result) {
                    $('#orderTablesContainer').html(result);
                },
                error: function (e) {
                    var errMsg = e.status == 401 ? "You are not authorised for this action" : "An unexpected error occurred.";
                    alert(errMsg);
                }
            });
        }
    }
</script>