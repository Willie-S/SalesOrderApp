@model SalesOrderApp.ViewModels.OrdersViewModel

<h2>Order Headers</h2>
<button id="placeOrderBtn" class="btn btn-primary mb-3" onclick="placeOrder()">Place Order</button>
<table class="table table-bordered" id="orderHeadersTable">
    <thead class="thead-dark">
        <tr>
            <th>
                Order Number
                <input type="text" id="orderNumberFilter" class="form-control form-control-sm" placeholder="Filter">
            </th>
            <th>
                Order Type
                <input type="text" id="orderTypeFilter" class="form-control form-control-sm" placeholder="Filter">
            </th>
            <th>
                Order Status
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Create Date
                <input type="date" id="fromDateFilter" class="form-control form-control-sm" placeholder="From Date">
                <input type="date" id="toDateFilter" class="form-control form-control-sm" placeholder="To Date">
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="orderHeadersTableBody">
        @if (Model.SalesOrders.Any())
        {
            @foreach (var order in Model.SalesOrders)
            {
                <tr 
                    data-order-id="@order.Id"
                    class="@(Model.SelectedSalesOrder?.Id > 0 && order.Id == Model.SelectedSalesOrder.Id ? "table-active" : "")"
                    onclick="selectOrder(@order.Id, @(Model.SelectedSalesOrder?.Id))"
                >
                    <td>@order.OrderHeader.OrderNumber</td>
                    <td>@order.OrderHeader.OrderType.Name</td>
                    <td>@order.OrderHeader.OrderStatus.Name</td>
                    <td>@order.OrderHeader.CustomerName</td>
                    <td>@order.OrderHeader.CreateDate.ToString("yyyy-MM-dd")</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editOrderHeader(@order.Id, event)">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteOrder(@order.Id, event)">Delete</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">No available data</td>
            </tr>
        }
    </tbody>
</table>

<script>
    // Event listeners for filter inputs
    document.getElementById('orderNumberFilter').addEventListener('input', applyFilters);
    document.getElementById('orderTypeFilter').addEventListener('input', applyFilters);
    document.getElementById('fromDateFilter').addEventListener('input', applyFilters);
    document.getElementById('toDateFilter').addEventListener('input', applyFilters);

    function applyFilters() {
        var orderNumber = document.getElementById('orderNumberFilter').value.toLowerCase();
        var orderType = document.getElementById('orderTypeFilter').value.toLowerCase();
        var fromDate = new Date(document.getElementById('fromDateFilter').value);
        var toDate = new Date(document.getElementById('toDateFilter').value);

        var rows = document.querySelectorAll('#orderHeadersTableBody tr');

        rows.forEach(function (row) {
            var orderNumberCell = row.cells[0].innerText.toLowerCase();
            var orderTypeCell = row.cells[1].innerText.toLowerCase();
            var createDateCell = new Date(row.cells[4].innerText);

            var matchesOrderNumber = orderNumber === '' || orderNumberCell.includes(orderNumber);
            var matchesOrderType = orderType === '' || orderTypeCell.includes(orderType);
            var matchesDateRange = (isNaN(fromDate.getTime()) || createDateCell >= fromDate) &&
                (isNaN(toDate.getTime()) || createDateCell <= toDate);

            if (matchesOrderNumber && matchesOrderType && matchesDateRange) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function deleteOrder(orderId, event) {
        // Prevent triggering the row selection
        event.stopPropagation();

        if (confirm('Are you sure you want to delete this order?')) {
            $.ajax({
                url: '@Url.Action("DeleteOrder", "Orders")',
                type: 'POST',
                data: { id: orderId },
                success: function (result) {
                    $('#orderTablesContainer').html(result);
                },
                error: function (e) {
                    var errMsg = e.status == 401 ? "You are not authorised for this action" : "An unexpected error occurred.";
                    alert(errMsg);
                }
            });
        }
    }
</script>